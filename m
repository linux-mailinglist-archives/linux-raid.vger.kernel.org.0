Return-Path: <linux-raid-owner@vger.kernel.org>
X-Original-To: lists+linux-raid@lfdr.de
Delivered-To: lists+linux-raid@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 49456777851
	for <lists+linux-raid@lfdr.de>; Thu, 10 Aug 2023 14:29:49 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S235199AbjHJM3p (ORCPT <rfc822;lists+linux-raid@lfdr.de>);
        Thu, 10 Aug 2023 08:29:45 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:49734 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S235184AbjHJM3o (ORCPT
        <rfc822;linux-raid@vger.kernel.org>); Thu, 10 Aug 2023 08:29:44 -0400
Received: from mx3.molgen.mpg.de (mx3.molgen.mpg.de [141.14.17.11])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 7B8A61B4
        for <linux-raid@vger.kernel.org>; Thu, 10 Aug 2023 05:29:43 -0700 (PDT)
Received: from [141.14.220.45] (g45.guest.molgen.mpg.de [141.14.220.45])
        (using TLSv1.3 with cipher TLS_AES_128_GCM_SHA256 (128/128 bits)
         key-exchange X25519 server-signature RSA-PSS (2048 bits) server-digest SHA256)
        (No client certificate requested)
        (Authenticated sender: pmenzel)
        by mx.molgen.mpg.de (Postfix) with ESMTPSA id 4922D61E5FE04;
        Thu, 10 Aug 2023 14:29:27 +0200 (CEST)
Message-ID: <3074f4bd-bef6-4929-99da-dc68a86d739f@molgen.mpg.de>
Date:   Thu, 10 Aug 2023 14:29:26 +0200
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH] md: raid0: account for split bio in iostat accounting
Content-Language: en-US
To:     Laurence Oberman <loberman@redhat.com>
Cc:     David Jeffery <djeffery@redhat.com>, Song Liu <song@kernel.org>,
        linux-raid@vger.kernel.org
References: <20230809171722.11089-1-djeffery@redhat.com>
 <2c18c875-bc00-465a-9e19-c66d63c07987@molgen.mpg.de>
 <069a0758d1d2199c5231e920aed6dfff0a552d87.camel@redhat.com>
From:   Paul Menzel <pmenzel@molgen.mpg.de>
In-Reply-To: <069a0758d1d2199c5231e920aed6dfff0a552d87.camel@redhat.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,
        RCVD_IN_DNSWL_BLOCKED,SPF_HELO_NONE,SPF_PASS autolearn=ham
        autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-raid.vger.kernel.org>
X-Mailing-List: linux-raid@vger.kernel.org

Dear Laurence,


Am 10.08.23 um 14:12 schrieb Laurence Oberman:
> On Thu, 2023-08-10 at 08:42 +0200, Paul Menzel wrote:

>> Am 09.08.23 um 19:16 schrieb David Jeffery:
>>> When a bio is split by md raid0, the newly created bio will not be
>>> tracked
>>> by md for I/O accounting. Only the portion of I/O still assigned to
>>> the
>>> original bio which was reduced by the split will be accounted for.
>>> This
>>> results in md iostat data sometimes showing I/O values far below
>>> the actual
>>> amount of data being sent through md.
>>>
>>> md_account_bio() needs to be called for all bio generated by the
>>> bio split.
>>
>> Could you please add how you tested this?
>>
>>> Signed-off-by: David Jeffery <djeffery@redhat.com>
>>> Tested-by: Laurence Oberman <loberman@redhat.com>
>>> ---
>>>    drivers/md/raid0.c | 3 +--
>>>    1 file changed, 1 insertion(+), 2 deletions(-)
>>>
>>> diff --git a/drivers/md/raid0.c b/drivers/md/raid0.c
>>> index d1ac73fcd852..1fd559ac8c68 100644
>>> --- a/drivers/md/raid0.c
>>> +++ b/drivers/md/raid0.c
>>> @@ -597,8 +597,7 @@ static bool raid0_make_request(struct mddev
>>> *mddev, struct bio *bio)
>>>                  bio = split;
>>>          }
>>>    
>>> -       if (bio->bi_pool != &mddev->bio_set)
>>> -               md_account_bio(mddev, &bio);
>>> +       md_account_bio(mddev, &bio);
>>>    
>>>          orig_sector = sector;
>>>          zone = find_zone(mddev->private, &sector);

> This was actually reported by a customer on RHEL9.2 and the way this
> played out is they were reading the md raid device directly using dd
> buffered reads.
> The md raid serves an LVM volume and file system.
> 
> Using dd if=/dev/md0 of=/dev/null bs=1024K count=10000 you would
> sporadically see iostat report these numbers where the raid md0 shows
> invalid stats.
> 
>       tps    MB_read/s    MB_wrtn/s    MB_read    MB_wrtn Device
>     221.00       111.0M         0.0k     111.0M       0.0k dm-12
>     222.00       110.0M         0.0k     110.0M       0.0k dm-15
>     223.00       111.0M         0.0k     111.0M       0.0k dm-16
>     220.00       109.0M         0.0k     109.0M       0.0k dm-17
>     221.00       111.0M         0.0k     111.0M       0.0k dm-18
>     221.00       111.0M         0.0k     111.0M       0.0k dm-19
>     219.00       109.0M         0.0k     109.0M       0.0k dm-20
>     219.00       110.0M         0.0k     110.0M       0.0k dm-22
>     880.00         6.9M         0.0k       6.9M       0.0k md0
>                  ******
> 
> After patching with David's patch the issue is no longer reproducible.
> We tested using the same method that reproduced the issue reported by
> the customer.

Thank you for the detailed reply. Should David resent, it’d be great, if 
that information could be added.


Kind regards,

Paul
