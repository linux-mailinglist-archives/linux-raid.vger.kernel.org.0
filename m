Return-Path: <linux-raid-owner@vger.kernel.org>
X-Original-To: lists+linux-raid@lfdr.de
Delivered-To: lists+linux-raid@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id CB9917B68A
	for <lists+linux-raid@lfdr.de>; Wed, 31 Jul 2019 02:09:52 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727946AbfGaAJw (ORCPT <rfc822;lists+linux-raid@lfdr.de>);
        Tue, 30 Jul 2019 20:09:52 -0400
Received: from mx2.suse.de ([195.135.220.15]:37348 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1727265AbfGaAJv (ORCPT <rfc822;linux-raid@vger.kernel.org>);
        Tue, 30 Jul 2019 20:09:51 -0400
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id C65BAAD88;
        Wed, 31 Jul 2019 00:09:49 +0000 (UTC)
From:   NeilBrown <neilb@suse.com>
To:     Coly Li <colyli@suse.de>, jes.sorensen@gmail.com,
        linux-raid@vger.kernel.org
Date:   Wed, 31 Jul 2019 10:09:41 +1000
Cc:     Neil F Brown <nfbrown@suse.com>
Subject: Re: [PATCH 1/2] mdadm: add --no-devices to avoid component devices detail information
In-Reply-To: <20190730164024.97862-1-colyli@suse.de>
References: <20190730164024.97862-1-colyli@suse.de>
Message-ID: <87o91bkqt6.fsf@notabene.neil.brown.name>
MIME-Version: 1.0
Content-Type: multipart/signed; boundary="=-=-=";
        micalg=pgp-sha256; protocol="application/pgp-signature"
Sender: linux-raid-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-raid.vger.kernel.org>
X-Mailing-List: linux-raid@vger.kernel.org

--=-=-=
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable

On Wed, Jul 31 2019, Coly Li wrote:

> When people assemble a md raid device with a large number of
> component deivces (e.g. 1500 DASD disks), the raid device detail
> information generated by 'mdadm --detail --export $devnode' is very
> large. It is because the detail information contains information of
> all the component disks (even the missing/failed ones).
>
> In such condition, when udev-md-raid-arrays.rules is triggered and
> internally calls "mdadm --detail --no-devices --export $devnode",
> user may observe systemd error message ""invalid message length". It
> is because the following on-stack raw message buffer in systemd code
> is not big enough,
> 	systemd/src/libudev/libudev-monitor.c
> 	_public_ struct udev_device *udev_monito ...
> 		struct ucred *cred;
> 		union {
> 			struct udev_monitor_netlink_header nlh;
> 			char raw[8192];
> 		} buf;
> Even change size of raw[] from 8KB to larger size, it may still be not
> enough for detail message of a md raid device with much larger number of
> component devices.
>
> To fix this problem, an extra option '--no-devices' is added (the
> original idea is proposed by Neil Brown). When printing detailed
> information of a md raid device, if '--no-devices' is specified, then
> all component devices information will not be printed, then the output
> message size can be restricted to a small number, even with the systemd
> only has 8KB on-disk raw buffer, the md raid array udev rules can work
> correctly without failure message.
>
> Signed-off-by: Coly Li <colyli@suse.de>
> Cc: Neil Brown <neilb@suse.com>
> ---
>  Detail.c | 17 +++++++++++++----
>  ReadMe.c |  1 +
>  mdadm.c  |  4 ++++
>  mdadm.h  |  2 ++
>  4 files changed, 20 insertions(+), 4 deletions(-)
>
> diff --git a/Detail.c b/Detail.c
> index 20ea03a..879ca3b 100644
> --- a/Detail.c
> +++ b/Detail.c
> @@ -56,7 +56,7 @@ int Detail(char *dev, struct context *c)
>  	 */
>  	int fd =3D open(dev, O_RDONLY);
>  	mdu_array_info_t array;
> -	mdu_disk_info_t *disks;
> +	mdu_disk_info_t *disks =3D NULL;
>  	int next;
>  	int d;
>  	time_t atime;
> @@ -280,7 +280,8 @@ int Detail(char *dev, struct context *c)
>  			}
>  			map_free(map);
>  		}
> -		if (sra) {
> +
> +		if (!c->no_devices && sra) {
>  			struct mdinfo *mdi;
>  			for (mdi  =3D sra->devs; mdi; mdi =3D mdi->next) {
>  				char *path;
> @@ -654,18 +655,23 @@ This is pretty boring
>  				closedir(dir);
>  			printf("\n\n");
>  		}
> +	}
>=20=20
> +	if (!c->no_devices && !c->brief) {
>  		if (array.raid_disks)
>  			printf("    Number   Major   Minor   RaidDevice State\n");
>  		else
>  			printf("    Number   Major   Minor   RaidDevice\n");

I would prefer this if statement say inside the 'else' branch above.
That does mean it needs to be indented more, but I think it is worth the
cost.


>  	}
> -	free(info);
>=20=20
>  	for (d =3D 0; d < max_disks * 2; d++) {
>  		char *dv;
>  		mdu_disk_info_t disk =3D disks[d];
>=20=20
> +		/* if --no_devices specified, quit devices iteration loop */
> +		if (c->no_devices)
> +			break;

Again, I would put this outside the loop, even though it mean more indents.

> +
>  		if (d >=3D array.raid_disks * 2 &&
>  		    disk.major =3D=3D 0 && disk.minor =3D=3D 0)
>  			continue;
> @@ -766,8 +772,11 @@ This is pretty boring
>  	    !enough(array.level, array.raid_disks, array.layout, 1, avail))
>  		rv =3D 2;
>=20=20
> -	free(disks);
>  out:
> +	if (disks)
> +		free(disks);
> +	if (info)
> +		free(info);

free is documented as "If ptr is NULL, no operation is performed".  So
just
	free(disks);
        free(info);

is sufficient.

These are all minor cosmetic issues though, so
  Reviewed-by: NeilBrown <neilb@suse.com>

Thanks,
NeilBrown


>  	close(fd);
>  	free(subarray);
>  	free(avail);
> diff --git a/ReadMe.c b/ReadMe.c
> index 12ccf83..eaf1042 100644
> --- a/ReadMe.c
> +++ b/ReadMe.c
> @@ -181,6 +181,7 @@ struct option long_options[] =3D {
>=20=20
>      /* For Detail/Examine */
>      {"brief",	  0, 0, Brief},
> +    {"no-devices",0, 0, NoDevices},
>      {"export",	  0, 0, 'Y'},
>      {"sparc2.2",  0, 0, Sparc22},
>      {"test",      0, 0, 't'},
> diff --git a/mdadm.c b/mdadm.c
> index 25a1abd..1fb8086 100644
> --- a/mdadm.c
> +++ b/mdadm.c
> @@ -159,6 +159,10 @@ int main(int argc, char *argv[])
>  			c.brief =3D 1;
>  			continue;
>=20=20
> +		case NoDevices:
> +			c.no_devices =3D 1;
> +			continue;
> +
>  		case 'Y': c.export++;
>  			continue;
>=20=20
> diff --git a/mdadm.h b/mdadm.h
> index c36d7fd..e96f271 100644
> --- a/mdadm.h
> +++ b/mdadm.h
> @@ -442,6 +442,7 @@ enum special_options {
>  	NoSharing,
>  	HelpOptions,
>  	Brief,
> +	NoDevices,
>  	ManageOpt,
>  	Add,
>  	AddSpare,
> @@ -552,6 +553,7 @@ struct context {
>  	int	runstop;
>  	int	verbose;
>  	int	brief;
> +	int	no_devices;
>  	int	force;
>  	char	*homehost;
>  	int	require_homehost;
> --=20
> 2.16.4

--=-=-=
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEG8Yp69OQ2HB7X0l6Oeye3VZigbkFAl1A3EYACgkQOeye3VZi
gbmU8hAAlm5hPwfM12esNLVKzTViVqqlWtOF73voowrcT2A1JKI/+k4z+hDyVylN
tVK6PSlKcfz/58IrV8La67p6nawRaccqkf0+wcniQHxLgLwGlZrTGnxcjPhE3xUi
mDDWxUknMucQXy5GfFYmwwo2e+A6KmXnvJTf8/pulqFfPMU22WtIYfRFQykSeiGt
F8Qx4af+dBlUvFiOvrZ5/9/O3TKsstz2KNHaYeR+OPtF5V1Z4h8jVMVXdwKJxUaw
AfiElZS1iwRlXYQX5W6iTF4mSGyKwMrkW1kTl1hh0YU3SjdED1xqfVFKwF4AHIIn
DC5V/OpcKuFYKCsLVig2RUsj705oC60UtmBQRvI0gdvowUy6fG7T+ymSyJ4SW6L1
AJcwmGRJIQ4aBmNU/Z54yFIdHkqshpr9WWIl+5zDJ39a+Qc0xt0BH93WJwfp9V0I
w6cFmWaQ3gInKeLX11IEBPbmTboKNKBKfr2yoey7VRyGRAVe3piZduJ1Ze562Y35
1V+VvReRph1bY6LIF5EgCKzOn+0bne+2cnKvcj4Kvismg0Uky1vtVA6i4lRIZAMK
QG/QgFZ9706Slq7apwsBdbMpDz6pHz0WdMJ4iY+WkEgCgILeJF7D9Q0spf4Y1um/
3SR7lZI8CHJUnqe1yEui5/3ePPl/MVbA+E9qFjiNr45iszStDs8=
=iTND
-----END PGP SIGNATURE-----
--=-=-=--
